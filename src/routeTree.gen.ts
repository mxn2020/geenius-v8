/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as YallasRouteImport } from './routes/yallas'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as CirclesRouteImport } from './routes/circles'
import { Route as BoardsRouteImport } from './routes/boards'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BoardsBoardIdRouteImport } from './routes/boards.$boardId'
import { Route as AuthSignupRouteImport } from './routes/auth.signup'
import { Route as AuthResetPasswordRouteImport } from './routes/auth.reset-password'
import { Route as AuthLoginRouteImport } from './routes/auth.login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth.forgot-password'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const YallasRoute = YallasRouteImport.update({
  id: '/yallas',
  path: '/yallas',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const CirclesRoute = CirclesRouteImport.update({
  id: '/circles',
  path: '/circles',
  getParentRoute: () => rootRouteImport,
} as any)
const BoardsRoute = BoardsRouteImport.update({
  id: '/boards',
  path: '/boards',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BoardsBoardIdRoute = BoardsBoardIdRouteImport.update({
  id: '/$boardId',
  path: '/$boardId',
  getParentRoute: () => BoardsRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/boards': typeof BoardsRouteWithChildren
  '/circles': typeof CirclesRoute
  '/dashboard': typeof DashboardRoute
  '/yallas': typeof YallasRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/boards/$boardId': typeof BoardsBoardIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/boards': typeof BoardsRouteWithChildren
  '/circles': typeof CirclesRoute
  '/dashboard': typeof DashboardRoute
  '/yallas': typeof YallasRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/boards/$boardId': typeof BoardsBoardIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/boards': typeof BoardsRouteWithChildren
  '/circles': typeof CirclesRoute
  '/dashboard': typeof DashboardRoute
  '/yallas': typeof YallasRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/boards/$boardId': typeof BoardsBoardIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/boards'
    | '/circles'
    | '/dashboard'
    | '/yallas'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/boards/$boardId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/boards'
    | '/circles'
    | '/dashboard'
    | '/yallas'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/boards/$boardId'
  id:
    | '__root__'
    | '/'
    | '/boards'
    | '/circles'
    | '/dashboard'
    | '/yallas'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/boards/$boardId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BoardsRoute: typeof BoardsRouteWithChildren
  CirclesRoute: typeof CirclesRoute
  DashboardRoute: typeof DashboardRoute
  YallasRoute: typeof YallasRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/yallas': {
      id: '/yallas'
      path: '/yallas'
      fullPath: '/yallas'
      preLoaderRoute: typeof YallasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/circles': {
      id: '/circles'
      path: '/circles'
      fullPath: '/circles'
      preLoaderRoute: typeof CirclesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards': {
      id: '/boards'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof BoardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/$boardId': {
      id: '/boards/$boardId'
      path: '/$boardId'
      fullPath: '/boards/$boardId'
      preLoaderRoute: typeof BoardsBoardIdRouteImport
      parentRoute: typeof BoardsRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface BoardsRouteChildren {
  BoardsBoardIdRoute: typeof BoardsBoardIdRoute
}

const BoardsRouteChildren: BoardsRouteChildren = {
  BoardsBoardIdRoute: BoardsBoardIdRoute,
}

const BoardsRouteWithChildren =
  BoardsRoute._addFileChildren(BoardsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BoardsRoute: BoardsRouteWithChildren,
  CirclesRoute: CirclesRoute,
  DashboardRoute: DashboardRoute,
  YallasRoute: YallasRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
